import { IoK8sApiCoreV1AffinityModelOptions as IoK8sApiCoreV1Affinity } from '../IoK8sApiCoreV1Affinity';
import { IoK8sApiCoreV1ContainerModelOptions as IoK8sApiCoreV1Container } from '../IoK8sApiCoreV1Container';
import { IoK8sApiCoreV1EphemeralContainerModelOptions as IoK8sApiCoreV1EphemeralContainer } from '../IoK8sApiCoreV1EphemeralContainer';
import { IoK8sApiCoreV1HostAliasModelOptions as IoK8sApiCoreV1HostAlias } from '../IoK8sApiCoreV1HostAlias';
import { IoK8sApiCoreV1LocalObjectReferenceModelOptions as IoK8sApiCoreV1LocalObjectReference } from '../IoK8sApiCoreV1LocalObjectReference';
import { IoK8sApiCoreV1PodDNSConfigModelOptions as IoK8sApiCoreV1PodDNSConfig } from '../IoK8sApiCoreV1PodDNSConfig';
import { IoK8sApiCoreV1PodOSModelOptions as IoK8sApiCoreV1PodOS } from '../IoK8sApiCoreV1PodOS';
import { IoK8sApiCoreV1PodReadinessGateModelOptions as IoK8sApiCoreV1PodReadinessGate } from '../IoK8sApiCoreV1PodReadinessGate';
import { IoK8sApiCoreV1PodResourceClaimModelOptions as IoK8sApiCoreV1PodResourceClaim } from '../IoK8sApiCoreV1PodResourceClaim';
import { IoK8sApiCoreV1PodSchedulingGateModelOptions as IoK8sApiCoreV1PodSchedulingGate } from '../IoK8sApiCoreV1PodSchedulingGate';
import { IoK8sApiCoreV1PodSecurityContextModelOptions as IoK8sApiCoreV1PodSecurityContext } from '../IoK8sApiCoreV1PodSecurityContext';
import { IoK8sApiCoreV1TolerationModelOptions as IoK8sApiCoreV1Toleration } from '../IoK8sApiCoreV1Toleration';
import { IoK8sApiCoreV1TopologySpreadConstraintModelOptions as IoK8sApiCoreV1TopologySpreadConstraint } from '../IoK8sApiCoreV1TopologySpreadConstraint';
import { IoK8sApiCoreV1VolumeModelOptions as IoK8sApiCoreV1Volume } from '../IoK8sApiCoreV1Volume';

export interface IoK8sApiCoreV1PodSpecModelOptions {
  activeDeadlineSeconds?: number;
  affinity?: IoK8sApiCoreV1Affinity;
  automountServiceAccountToken?: boolean;
  containers: Array<IoK8sApiCoreV1Container>;
  dnsConfig?: IoK8sApiCoreV1PodDNSConfig;
  dnsPolicy?: string;
  enableServiceLinks?: boolean;
  ephemeralContainers?: Array<IoK8sApiCoreV1EphemeralContainer>;
  hostAliases?: Array<IoK8sApiCoreV1HostAlias>;
  hostIPC?: boolean;
  hostNetwork?: boolean;
  hostPID?: boolean;
  hostUsers?: boolean;
  hostname?: string;
  imagePullSecrets?: Array<IoK8sApiCoreV1LocalObjectReference>;
  initContainers?: Array<IoK8sApiCoreV1Container>;
  nodeName?: string;
  nodeSelector?: { [key: string]: string };
  os?: IoK8sApiCoreV1PodOS;
  overhead?: { [key: string]: string };
  preemptionPolicy?: string;
  priority?: number;
  priorityClassName?: string;
  readinessGates?: Array<IoK8sApiCoreV1PodReadinessGate>;
  resourceClaims?: Array<IoK8sApiCoreV1PodResourceClaim>;
  restartPolicy?: string;
  runtimeClassName?: string;
  schedulerName?: string;
  schedulingGates?: Array<IoK8sApiCoreV1PodSchedulingGate>;
  securityContext?: IoK8sApiCoreV1PodSecurityContext;
  serviceAccount?: string;
  serviceAccountName?: string;
  setHostnameAsFQDN?: boolean;
  shareProcessNamespace?: boolean;
  subdomain?: string;
  terminationGracePeriodSeconds?: number;
  tolerations?: Array<IoK8sApiCoreV1Toleration>;
  topologySpreadConstraints?: Array<IoK8sApiCoreV1TopologySpreadConstraint>;
  volumes?: Array<IoK8sApiCoreV1Volume>;
}
